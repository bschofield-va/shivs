#!/bin/env bash

set -euo pipefail

listNonCompliantNames() {
  for name in $(aws ssm describe-parameters \
    | jq -r '.Parameters[]|select(.Name | (startswith("/vaec/") | not))|.Name' \
    | sort)
  do
    if [[ $name != /dvp/* || $name == */sandbox/* ]]; then echo $name; fi
  done
}

copy() {
  local from=${1:-}
  local to=${2:-}
  if [ -z "$from" -o -z "$to" ]; then usage "from and to names not specified"; fi
  local value=$(aws ssm get-parameter --name $from --with-decryption | jq .Parameter.Value -r)
  if [ -z "$value" ]; then echo "Failed to determine parameter value"; exit 1; fi
  aws ssm put-parameter --name $to --type SecureString --value "$value"
}

autoCopy() {
  for bad in $(listNonCompliantNames)
  do
    local good=$(goodNameFor $bad)
    echo "Copy $bad --> $good"
    copy $bad $good
  done

}

goodNameFor() {
  local bad="$1"
  local good="$bad"
  if [[ $good == */sandbox/* ]]; then good=${good/sandbox/lab}; fi
  if [[ $good != /dvp/* ]]; then good="/dvp$good"; fi
  echo "$good"
}


usage() {
cat<<EOF
$0 [options] <command>

Work with DVP secrets in AWS parameter store.

Commands
 list-non-compliant-names
   List parameters that do not match DVP conventions
 copy <from> <to>
  Copy a parameter

EOF
}

main() {
  local args=$(getopt \
    -l "debug" \
    -o "" -- "$@")
  [ $? != 0 ] && usage
  eval set -- "$args"
  while true
  do
    case "$1" in
      --debug) DEBUG=true;;
      --) shift; break;;
    esac
    shift
  done

  if [ -z "${DEBUG:-}" ]; then DEBUG=false; fi
  if [ "$DEBUG" == "true" ]; then set -x; fi
  COMMAND="${1:-}"
  if [ -z "$COMMAND" ]; then usage "No command specified"; fi
  shift
  case $COMMAND in
    l*) listNonCompliantNames;;
    cp|c*) copy $@;;
    a|autocopy) autoCopy;;
    *) usage "Unknown command: $COMMAND"
  esac

}

main $@

